interface Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  changed: String!
  language: String
  published: Boolean!
  entityLinks: EntityLinks
}

type EntityList {
  total: Int!
  items: [Page!]
}

type Teaser {
  image: MediaImage
  text: String
}

type EntityLinks {
  canonical: String
  deleteForm: String
  deleteMultipleForm: String
  editForm: String
  versionHistory: String
  revision: String
  create: String
  latestVersion: String
}

type Article implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  published: Boolean!
  entityLinks: EntityLinks

  author: User
  channel: Channel
  tags: [Tags]
  seoTitle: String!
  content: [Paragraph]
  teaser: Teaser
}

type BasicPage implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  published: Boolean!
  entityLinks: EntityLinks

  author: User
  content: String
}

type Tags implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  changed: String!
  language: String
  published: Boolean!
  entityLinks: EntityLinks

  author: User
  content: [Paragraph]
  articles(offset: Int = 0, limit: Int, languages: [String]): EntityList
}

type Channel implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  changed: String!
  language: String
  published: Boolean!
  entityLinks: EntityLinks

  parent: Channel
  author: User
  content: [Paragraph]
  articles(offset: Int = 0, limit: Int, languages: [String]): EntityList
}

type User implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  published: Boolean!
  entityLinks: EntityLinks

  mail: String
  language: String!
  access: String!
}
