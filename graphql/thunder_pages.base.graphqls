interface Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  entityLinks: EntityLinks
}

type EntityList {
  total: Int!
  items: [Page!]
}

type Teaser {
  image: MediaImage
  text: String
}

type EntityLinks {
  canonical: String
  deleteForm: String
  deleteMultipleForm: String
  editForm: String
  versionHistory: String
  revision: String
  create: String
  latestVersion: String
}

type Article implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  entityLinks: EntityLinks

  author: User
  published: Boolean!
  channel: Channel
  tags: [Tags]
  seoTitle: String!
  content: [Paragraph]
  teaser: Teaser
}

type BasicPage implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  entityLinks: EntityLinks

  author: User
  published: Boolean!
  content: String
}

type Tags implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  entityLinks: EntityLinks

  author: User
  published: Boolean!
  content: [Paragraph]
  articles(offset: Int = 0, limit: Int, languages: [String]): EntityList
}

type Channel implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  entityLinks: EntityLinks

  parent: Channel
  author: User
  published: Boolean!
  content: [Paragraph]
  articles(offset: Int = 0, limit: Int, languages: [String]): EntityList
}

type User implements Page {
  id: Int!
  uuid: String!
  name: String!
  entity: String!
  url: String!
  created: String!
  changed: String!
  language: String
  entityLinks: EntityLinks

  mail: String
}


interface Media {
  id: Int!
  uuid: String!
  entity: String!
  name: String
  thumbnail: Thumbnail
  published: Boolean
  fallbackMedia: Media
}

type MediaImage implements Media & Image {
  id: Int!
  uuid: String!
  entity: String!
  name: String
  thumbnail: Thumbnail
  published: Boolean
  fallbackMedia: MediaImage

  src: String
  width: Int
  height: Int
  derivative(style: String!): ImageDerivative
  focalPoint: FocalPoint

  title: String
  alt: String
  copyright: String
  description: String
  tags: [Tags]
  source: String
}

type MediaVideo implements Media {
  id: Int!
  uuid: String!
  entity: String!
  name: String
  thumbnail: Thumbnail
  published: Boolean
  fallbackMedia: MediaVideo

  src: String
  author: String
  caption: String
  copyright: String
  description: String
  source: String
}

interface Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String
}

type ParagraphImage implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  image: MediaImage
}

type ParagraphTwitter implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  url: String
}

type ParagraphInstagram implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  url: String
}

type ParagraphPinterest implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  url: String
}

type ParagraphText implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  text: String
}

type ParagraphGallery implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  images: [MediaImage]
}

type ParagraphLink implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  links: [Link]
}

type ParagraphVideo implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  video: MediaVideo
}

type ParagraphQuote implements Paragraph {
  id: Int!
  uuid: String!
  entity: String!
  name: String

  text: String
}

